spring:
  profiles:
    active: dev
  application:
    name: amadeus-travel-api
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  security:
    user:
      name: admin
      password: admin

server:
  port: 8080
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.amadeus.api: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

jwt:
  secret: amadeus-travel-api-secret-key-2024-jwt-token-generation
  expiration: 86400000
  refresh-expiration: 604800000

cors:
  allowed-origins: http://localhost:3000,http://localhost:3001,http://localhost:5173,http://localhost:5174
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

security:
  public-endpoints:
    - /auth/login
    - /auth/register
    - /h2-console/**
    - /actuator/**
  admin-endpoints:
    - /admin/**
    - /users/**
  user-endpoints:
    - /travel/**
    - /bookings/**

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

logging:
  level:
    com.amadeus.api: DEBUG
    org.springframework.security: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/amadeus_travel}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

server:
  port: ${PORT:8080}

logging:
  level:
    com.amadeus.api: INFO
    org.springframework.security: WARN
    root: WARN

jwt:
  secret: ${JWT_SECRET:amadeus-travel-api-secret-key-2024-jwt-token-generation}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
